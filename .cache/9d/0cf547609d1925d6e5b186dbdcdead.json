{"id":"updateData.js","dependencies":[{"name":"D:\\Download\\complete-node-bootcamp-master\\4-natours\\starter\\package.json","includedInParent":true,"mtime":1664113447465},{"name":"axios","loc":{"line":1,"column":18,"index":18},"parent":"D:\\Download\\complete-node-bootcamp-master\\4-natours\\starter\\public\\js\\updateData.js","resolved":"D:\\Download\\complete-node-bootcamp-master\\4-natours\\starter\\node_modules\\axios\\index.js"},{"name":"./alert","loc":{"line":2,"column":26,"index":53},"parent":"D:\\Download\\complete-node-bootcamp-master\\4-natours\\starter\\public\\js\\updateData.js","resolved":"D:\\Download\\complete-node-bootcamp-master\\4-natours\\starter\\public\\js\\alert.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updatePassword = exports.updateData = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _alert = require(\"./alert\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar updateData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n    var res;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return (0, _axios.default)({\n              method: 'patch',\n              url: \"http://127.0.0.1:3000/api/v1/users/updateMe\",\n              data: data\n            });\n\n          case 3:\n            res = _context.sent;\n\n            //console.log(res);\n            if (res) {\n              (0, _alert.showAlert)(\"success\", \"Data updated successfully\");\n              setTimeout(function () {\n                location.reload(true);\n              }, 1000);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            if (_context.t0.response.data.message === 'Duplicate data') (0, _alert.showAlert)(\"error\", \"Email is already taken\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function updateData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // updating password using passward change route\n\n\nexports.updateData = updateData;\n\nvar updatePassword = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(currentPassword, password, passwordConfirm) {\n    var res;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return (0, _axios.default)({\n              method: 'patch',\n              url: \"http://127.0.0.1:3000/api/v1/users/changePassword\",\n              data: {\n                currentPassword: currentPassword,\n                newPassword: password,\n                newpasswordConfirm: passwordConfirm\n              }\n            });\n\n          case 3:\n            res = _context2.sent;\n\n            if (res) {\n              (0, _alert.showAlert)(\"success\", \"Password changed successfully\");\n              setTimeout(function () {\n                location.reload(true);\n              }, 1000);\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            //console.log(err);\n            (0, _alert.showAlert)(\"error\", \"Email is already taken\");\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n\n  return function updatePassword(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.updatePassword = updatePassword;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"updateData.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"updateData.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":47},"source":"updateData.js","original":{"line":2,"column":0}},{"generated":{"line":22,"column":0},"source":"updateData.js","original":{"line":4,"column":7}},{"generated":{"line":22,"column":4},"source":"updateData.js","original":{"line":4,"column":13},"name":"updateData"},{"generated":{"line":22,"column":14},"source":"updateData.js","original":{"line":4,"column":23}},{"generated":{"line":23,"column":2},"source":"updateData.js","original":{"line":4,"column":23}},{"generated":{"line":23,"column":72},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":23,"column":89},"source":"updateData.js","original":{"line":4,"column":39},"name":"data"},{"generated":{"line":23,"column":93},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":24,"column":4},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":25,"column":4},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":26,"column":6},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":27,"column":8},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":28,"column":10},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":29,"column":12},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":30,"column":12},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":31,"column":12},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":31,"column":19},"source":"updateData.js","original":{"line":6,"column":20}},{"generated":{"line":31,"column":23},"source":"updateData.js","original":{"line":6,"column":20},"name":"axios"},{"generated":{"line":31,"column":37},"source":"updateData.js","original":{"line":6,"column":20}},{"generated":{"line":31,"column":39},"source":"updateData.js","original":{"line":6,"column":26}},{"generated":{"line":32,"column":14},"source":"updateData.js","original":{"line":7,"column":8},"name":"method"},{"generated":{"line":32,"column":20},"source":"updateData.js","original":{"line":7,"column":14}},{"generated":{"line":32,"column":22},"source":"updateData.js","original":{"line":7,"column":15}},{"generated":{"line":32,"column":29},"source":"updateData.js","original":{"line":6,"column":26}},{"generated":{"line":33,"column":14},"source":"updateData.js","original":{"line":8,"column":8},"name":"url"},{"generated":{"line":33,"column":17},"source":"updateData.js","original":{"line":8,"column":11}},{"generated":{"line":33,"column":19},"source":"updateData.js","original":{"line":8,"column":12}},{"generated":{"line":33,"column":64},"source":"updateData.js","original":{"line":6,"column":26}},{"generated":{"line":34,"column":14},"source":"updateData.js","original":{"line":9,"column":7},"name":"data"},{"generated":{"line":34,"column":18},"source":"updateData.js","original":{"line":9,"column":11}},{"generated":{"line":34,"column":20},"source":"updateData.js","original":{"line":9,"column":7},"name":"data"},{"generated":{"line":35,"column":12},"source":"updateData.js","original":{"line":6,"column":26}},{"generated":{"line":35,"column":13},"source":"updateData.js","original":{"line":6,"column":20}},{"generated":{"line":35,"column":14},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":37,"column":10},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":38,"column":12},"source":"updateData.js","original":{"line":6,"column":10},"name":"res"},{"generated":{"line":38,"column":15},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":40,"column":12},"source":"updateData.js","original":{"line":11,"column":2}},{"generated":{"line":41,"column":12},"source":"updateData.js","original":{"line":12,"column":4}},{"generated":{"line":41,"column":16},"source":"updateData.js","original":{"line":12,"column":7},"name":"res"},{"generated":{"line":41,"column":19},"source":"updateData.js","original":{"line":12,"column":4}},{"generated":{"line":41,"column":21},"source":"updateData.js","original":{"line":13,"column":4}},{"generated":{"line":42,"column":14},"source":"updateData.js","original":{"line":14,"column":8}},{"generated":{"line":42,"column":18},"source":"updateData.js","original":{"line":14,"column":8},"name":"showAlert"},{"generated":{"line":42,"column":34},"source":"updateData.js","original":{"line":14,"column":8}},{"generated":{"line":42,"column":36},"source":"updateData.js","original":{"line":14,"column":18}},{"generated":{"line":42,"column":45},"source":"updateData.js","original":{"line":14,"column":8}},{"generated":{"line":42,"column":47},"source":"updateData.js","original":{"line":14,"column":28}},{"generated":{"line":42,"column":74},"source":"updateData.js","original":{"line":14,"column":8}},{"generated":{"line":43,"column":14},"source":"updateData.js","original":{"line":15,"column":8},"name":"setTimeout"},{"generated":{"line":43,"column":24},"source":"updateData.js","original":{"line":15,"column":18}},{"generated":{"line":43,"column":25},"source":"updateData.js","original":{"line":15,"column":19}},{"generated":{"line":43,"column":37},"source":"updateData.js","original":{"line":15,"column":23}},{"generated":{"line":44,"column":16},"source":"updateData.js","original":{"line":16,"column":8},"name":"location"},{"generated":{"line":44,"column":24},"source":"updateData.js","original":{"line":16,"column":16}},{"generated":{"line":44,"column":25},"source":"updateData.js","original":{"line":16,"column":17},"name":"reload"},{"generated":{"line":44,"column":31},"source":"updateData.js","original":{"line":16,"column":8}},{"generated":{"line":44,"column":32},"source":"updateData.js","original":{"line":16,"column":24}},{"generated":{"line":44,"column":36},"source":"updateData.js","original":{"line":16,"column":8}},{"generated":{"line":45,"column":14},"source":"updateData.js","original":{"line":16,"column":30}},{"generated":{"line":45,"column":15},"source":"updateData.js","original":{"line":15,"column":18}},{"generated":{"line":45,"column":17},"source":"updateData.js","original":{"line":16,"column":31}},{"generated":{"line":45,"column":21},"source":"updateData.js","original":{"line":15,"column":18}},{"generated":{"line":45,"column":22},"source":"updateData.js","original":{"line":15,"column":8}},{"generated":{"line":46,"column":12},"source":"updateData.js","original":{"line":17,"column":5}},{"generated":{"line":48,"column":12},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":49,"column":12},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":51,"column":10},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":52,"column":12},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":53,"column":12},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":54,"column":12},"source":"updateData.js","original":{"line":21,"column":4}},{"generated":{"line":54,"column":16},"source":"updateData.js","original":{"line":21,"column":7}},{"generated":{"line":54,"column":28},"source":"updateData.js","original":{"line":21,"column":11},"name":"response"},{"generated":{"line":54,"column":36},"source":"updateData.js","original":{"line":21,"column":7}},{"generated":{"line":54,"column":37},"source":"updateData.js","original":{"line":21,"column":20},"name":"data"},{"generated":{"line":54,"column":41},"source":"updateData.js","original":{"line":21,"column":7}},{"generated":{"line":54,"column":42},"source":"updateData.js","original":{"line":21,"column":25},"name":"message"},{"generated":{"line":54,"column":49},"source":"updateData.js","original":{"line":21,"column":7}},{"generated":{"line":54,"column":54},"source":"updateData.js","original":{"line":21,"column":35}},{"generated":{"line":54,"column":70},"source":"updateData.js","original":{"line":21,"column":4}},{"generated":{"line":54,"column":72},"source":"updateData.js","original":{"line":22,"column":4}},{"generated":{"line":54,"column":76},"source":"updateData.js","original":{"line":22,"column":4},"name":"showAlert"},{"generated":{"line":54,"column":92},"source":"updateData.js","original":{"line":22,"column":4}},{"generated":{"line":54,"column":94},"source":"updateData.js","original":{"line":22,"column":14}},{"generated":{"line":54,"column":101},"source":"updateData.js","original":{"line":22,"column":4}},{"generated":{"line":54,"column":103},"source":"updateData.js","original":{"line":22,"column":22}},{"generated":{"line":54,"column":127},"source":"updateData.js","original":{"line":22,"column":4}},{"generated":{"line":56,"column":10},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":57,"column":10},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":58,"column":12},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":59,"column":8},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":60,"column":6},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":61,"column":4},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":62,"column":2},"source":"updateData.js","original":{"line":4,"column":24}},{"generated":{"line":62,"column":3},"source":"updateData.js","original":{"line":4,"column":23}},{"generated":{"line":64,"column":2},"source":"updateData.js","original":{"line":4,"column":23}},{"generated":{"line":64,"column":18},"source":"updateData.js","original":{"line":4,"column":13},"name":"updateData"},{"generated":{"line":64,"column":28},"source":"updateData.js","original":{"line":4,"column":23}},{"generated":{"line":65,"column":4},"source":"updateData.js","original":{"line":4,"column":23}},{"generated":{"line":66,"column":2},"source":"updateData.js","original":{"line":4,"column":23}},{"generated":{"line":67,"column":0},"source":"updateData.js","original":{"line":4,"column":23}},{"generated":{"line":67,"column":3},"source":"updateData.js","original":{"line":4,"column":7}},{"generated":{"line":67,"column":5},"source":"updateData.js","original":{"line":28,"column":0}},{"generated":{"line":72,"column":0},"source":"updateData.js","original":{"line":29,"column":7}},{"generated":{"line":72,"column":4},"source":"updateData.js","original":{"line":29,"column":13},"name":"updatePassword"},{"generated":{"line":72,"column":18},"source":"updateData.js","original":{"line":29,"column":27}},{"generated":{"line":73,"column":2},"source":"updateData.js","original":{"line":29,"column":27}},{"generated":{"line":73,"column":73},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":73,"column":91},"source":"updateData.js","original":{"line":29,"column":43},"name":"currentPassword"},{"generated":{"line":73,"column":106},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":73,"column":108},"source":"updateData.js","original":{"line":29,"column":59},"name":"password"},{"generated":{"line":73,"column":116},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":73,"column":118},"source":"updateData.js","original":{"line":29,"column":68},"name":"passwordConfirm"},{"generated":{"line":73,"column":133},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":74,"column":4},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":75,"column":4},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":76,"column":6},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":77,"column":8},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":78,"column":10},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":79,"column":12},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":80,"column":12},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":81,"column":12},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":81,"column":19},"source":"updateData.js","original":{"line":31,"column":20}},{"generated":{"line":81,"column":23},"source":"updateData.js","original":{"line":31,"column":20},"name":"axios"},{"generated":{"line":81,"column":37},"source":"updateData.js","original":{"line":31,"column":20}},{"generated":{"line":81,"column":39},"source":"updateData.js","original":{"line":31,"column":26}},{"generated":{"line":82,"column":14},"source":"updateData.js","original":{"line":32,"column":8},"name":"method"},{"generated":{"line":82,"column":20},"source":"updateData.js","original":{"line":32,"column":14}},{"generated":{"line":82,"column":22},"source":"updateData.js","original":{"line":32,"column":15}},{"generated":{"line":82,"column":29},"source":"updateData.js","original":{"line":31,"column":26}},{"generated":{"line":83,"column":14},"source":"updateData.js","original":{"line":33,"column":8},"name":"url"},{"generated":{"line":83,"column":17},"source":"updateData.js","original":{"line":33,"column":11}},{"generated":{"line":83,"column":19},"source":"updateData.js","original":{"line":33,"column":12}},{"generated":{"line":83,"column":70},"source":"updateData.js","original":{"line":31,"column":26}},{"generated":{"line":84,"column":14},"source":"updateData.js","original":{"line":34,"column":8},"name":"data"},{"generated":{"line":84,"column":18},"source":"updateData.js","original":{"line":34,"column":12}},{"generated":{"line":84,"column":20},"source":"updateData.js","original":{"line":34,"column":13}},{"generated":{"line":85,"column":16},"source":"updateData.js","original":{"line":35,"column":12},"name":"currentPassword"},{"generated":{"line":85,"column":31},"source":"updateData.js","original":{"line":35,"column":27}},{"generated":{"line":85,"column":33},"source":"updateData.js","original":{"line":35,"column":28},"name":"currentPassword"},{"generated":{"line":85,"column":48},"source":"updateData.js","original":{"line":34,"column":13}},{"generated":{"line":86,"column":16},"source":"updateData.js","original":{"line":36,"column":12},"name":"newPassword"},{"generated":{"line":86,"column":27},"source":"updateData.js","original":{"line":36,"column":23}},{"generated":{"line":86,"column":29},"source":"updateData.js","original":{"line":36,"column":24},"name":"password"},{"generated":{"line":86,"column":37},"source":"updateData.js","original":{"line":34,"column":13}},{"generated":{"line":87,"column":16},"source":"updateData.js","original":{"line":37,"column":12},"name":"newpasswordConfirm"},{"generated":{"line":87,"column":34},"source":"updateData.js","original":{"line":37,"column":30}},{"generated":{"line":87,"column":36},"source":"updateData.js","original":{"line":37,"column":31},"name":"passwordConfirm"},{"generated":{"line":88,"column":14},"source":"updateData.js","original":{"line":34,"column":13}},{"generated":{"line":89,"column":12},"source":"updateData.js","original":{"line":31,"column":26}},{"generated":{"line":89,"column":13},"source":"updateData.js","original":{"line":31,"column":20}},{"generated":{"line":89,"column":14},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":91,"column":10},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":92,"column":12},"source":"updateData.js","original":{"line":31,"column":10},"name":"res"},{"generated":{"line":92,"column":15},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":94,"column":12},"source":"updateData.js","original":{"line":41,"column":4}},{"generated":{"line":94,"column":16},"source":"updateData.js","original":{"line":41,"column":7},"name":"res"},{"generated":{"line":94,"column":19},"source":"updateData.js","original":{"line":41,"column":4}},{"generated":{"line":94,"column":21},"source":"updateData.js","original":{"line":42,"column":4}},{"generated":{"line":95,"column":14},"source":"updateData.js","original":{"line":43,"column":8}},{"generated":{"line":95,"column":18},"source":"updateData.js","original":{"line":43,"column":8},"name":"showAlert"},{"generated":{"line":95,"column":34},"source":"updateData.js","original":{"line":43,"column":8}},{"generated":{"line":95,"column":36},"source":"updateData.js","original":{"line":43,"column":18}},{"generated":{"line":95,"column":45},"source":"updateData.js","original":{"line":43,"column":8}},{"generated":{"line":95,"column":47},"source":"updateData.js","original":{"line":43,"column":28}},{"generated":{"line":95,"column":78},"source":"updateData.js","original":{"line":43,"column":8}},{"generated":{"line":96,"column":14},"source":"updateData.js","original":{"line":44,"column":8},"name":"setTimeout"},{"generated":{"line":96,"column":24},"source":"updateData.js","original":{"line":44,"column":18}},{"generated":{"line":96,"column":25},"source":"updateData.js","original":{"line":44,"column":19}},{"generated":{"line":96,"column":37},"source":"updateData.js","original":{"line":44,"column":23}},{"generated":{"line":97,"column":16},"source":"updateData.js","original":{"line":45,"column":8},"name":"location"},{"generated":{"line":97,"column":24},"source":"updateData.js","original":{"line":45,"column":16}},{"generated":{"line":97,"column":25},"source":"updateData.js","original":{"line":45,"column":17},"name":"reload"},{"generated":{"line":97,"column":31},"source":"updateData.js","original":{"line":45,"column":8}},{"generated":{"line":97,"column":32},"source":"updateData.js","original":{"line":45,"column":24}},{"generated":{"line":97,"column":36},"source":"updateData.js","original":{"line":45,"column":8}},{"generated":{"line":98,"column":14},"source":"updateData.js","original":{"line":45,"column":30}},{"generated":{"line":98,"column":15},"source":"updateData.js","original":{"line":44,"column":18}},{"generated":{"line":98,"column":17},"source":"updateData.js","original":{"line":45,"column":31}},{"generated":{"line":98,"column":21},"source":"updateData.js","original":{"line":44,"column":18}},{"generated":{"line":98,"column":22},"source":"updateData.js","original":{"line":44,"column":8}},{"generated":{"line":99,"column":12},"source":"updateData.js","original":{"line":46,"column":5}},{"generated":{"line":101,"column":12},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":102,"column":12},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":104,"column":10},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":105,"column":12},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":106,"column":12},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":107,"column":12},"source":"updateData.js","original":{"line":50,"column":4}},{"generated":{"line":108,"column":12},"source":"updateData.js","original":{"line":51,"column":4}},{"generated":{"line":108,"column":16},"source":"updateData.js","original":{"line":51,"column":4},"name":"showAlert"},{"generated":{"line":108,"column":32},"source":"updateData.js","original":{"line":51,"column":4}},{"generated":{"line":108,"column":34},"source":"updateData.js","original":{"line":51,"column":14}},{"generated":{"line":108,"column":41},"source":"updateData.js","original":{"line":51,"column":4}},{"generated":{"line":108,"column":43},"source":"updateData.js","original":{"line":51,"column":22}},{"generated":{"line":108,"column":67},"source":"updateData.js","original":{"line":51,"column":4}},{"generated":{"line":110,"column":10},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":111,"column":10},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":112,"column":12},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":113,"column":8},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":114,"column":6},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":115,"column":4},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":116,"column":2},"source":"updateData.js","original":{"line":29,"column":28}},{"generated":{"line":116,"column":3},"source":"updateData.js","original":{"line":29,"column":27}},{"generated":{"line":118,"column":2},"source":"updateData.js","original":{"line":29,"column":27}},{"generated":{"line":118,"column":18},"source":"updateData.js","original":{"line":29,"column":13},"name":"updatePassword"},{"generated":{"line":118,"column":32},"source":"updateData.js","original":{"line":29,"column":27}},{"generated":{"line":119,"column":4},"source":"updateData.js","original":{"line":29,"column":27}},{"generated":{"line":120,"column":2},"source":"updateData.js","original":{"line":29,"column":27}},{"generated":{"line":121,"column":0},"source":"updateData.js","original":{"line":29,"column":27}},{"generated":{"line":121,"column":3},"source":"updateData.js","original":{"line":29,"column":7}}],"sources":{"updateData.js":"import axios from \"axios\"\r\nimport { showAlert } from \"./alert\"\r\n\r\nexport const updateData=async function(data){\r\n    try{\r\n    const res=await axios({\r\n        method:'patch',\r\n        url:\"http://127.0.0.1:3000/api/v1/users/updateMe\",\r\n       data\r\n    })\r\n  //console.log(res);\r\n    if(res)\r\n    {\r\n        showAlert(\"success\",\"Data updated successfully\");\r\n        setTimeout(()=>{\r\n        location.reload(true)},1000)\r\n    }\r\n}\r\ncatch(err)\r\n{\r\n    if(err.response.data.message==='Duplicate data')\r\n    showAlert(\"error\",\"Email is already taken\");\r\n}\r\n\r\n}\r\n\r\n\r\n// updating password using passward change route\r\nexport const updatePassword=async function(currentPassword,password,passwordConfirm){\r\n    try{\r\n    const res=await axios({\r\n        method:'patch',\r\n        url:\"http://127.0.0.1:3000/api/v1/users/changePassword\",\r\n        data:{\r\n            currentPassword:currentPassword,\r\n            newPassword:password,\r\n            newpasswordConfirm:passwordConfirm\r\n        }\r\n    })\r\n\r\n    if(res)\r\n    {\r\n        showAlert(\"success\",\"Password changed successfully\");\r\n        setTimeout(()=>{\r\n        location.reload(true)},1000)\r\n    }\r\n}\r\ncatch(err)\r\n{\r\n    //console.log(err);\r\n    showAlert(\"error\",\"Email is already taken\");\r\n}\r\n\r\n}"},"lineCount":null}},"error":null,"hash":"4dce2bd931731bd64f496803aa871aad","cacheData":{"env":{}}}